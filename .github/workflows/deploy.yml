name: CI/CD Pipeline Deployment

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20 

      # Install dependencies
      - name: Install Dependencies
        run: |
          cd frontend
          npm install

      # Run tests
      #  name: Run Unit Tests
      #  run: npm test

      # Deploy GetUser Lambda Function
      - name: Deploy GetUserFunction
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd backend
          cd functions
          mkdir getUserPackage
          cp getUser.js extractIds.js getUserPackage/
          cd getUserPackage
          zip -r getUserFunction.zip .
          aws lambda update-function-code \
            --function-name GetUserFunction \
            --zip-file fileb://getUserFunction.zip \
            --region $AWS_REGION

      # Deploy UpdateUsers Lambda Function
      - name: Deploy UpdateUserFunction
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd backend
          cd functions
          mkdir updateUserPackage
          cp updateUser.js extractIds.js updateUserPackage/
          cd updateUserPackage
          zip -r updateUserFunction.zip .
          aws lambda update-function-code \
            --function-name UpdateUserFunction \
            --zip-file fileb://updateUserFunction.zip \
            --region $AWS_REGION

      # Deploy DeleteUser Lambda Function
      - name: Deploy DeleteUserFunction
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cd backend
          cd functions
          mkdir deleteUserPackage
          cp deleteUser.js extractIds.js deleteUserPackage/
          cd deleteUserPackage
          zip -r deleteUserFunction.zip .
          aws lambda update-function-code \
            --function-name DeleteUserFunction \
            --zip-file fileb://deleteUserFunction.zip \
            --region $AWS_REGION

      # Deploy Frontend (S3 + CloudFront)
      - name: Deploy Frontend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          cd frontend
          npm install
          npm run build
          aws s3 sync ./build s3://$S3_BUCKET --delete
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"